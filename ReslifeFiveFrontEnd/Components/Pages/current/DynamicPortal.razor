@page "/dynamicPortal"
@inject IGenService GenService
@inject NavigationManager NavigationManager

<h3>DynamicPortal</h3>

<p>Select Eligibility:</p>
<div>
    <label>
        <input type="radio" name="eligibility" value="true" @onchange="OnEligibilityChanged" checked="@((eligibility == true))" />
        Yes
    </label>
</div>
<div>
    <label>
        <input type="radio" name="eligibility" value="false" @onchange="OnEligibilityChanged" checked="@((eligibility == false))" />
        No
    </label>
</div>

<p>Select Age Group:</p>
<div>
    <label>
        <input type="radio" name="ageGroup" value="true" @onchange="OnAgeGroupChanged" checked="@((ageGroup == true))" />
        18-
    </label>
</div>
<div>
    <label>
        <input type="radio" name="ageGroup" value="false" @onchange="OnAgeGroupChanged" checked="@((ageGroup == false))" />
        19+
    </label>
</div>

<p>Select Minor Status:</p>
<div>
    <label>
        <input type="radio" name="Mnr" value="true" @onchange="OnMnrChanged" checked="@((Mnr == true))" />
        Yes
    </label>
</div>
<div>
    <label>
        <input type="radio" name="Mnr" value="false" @onchange="OnMnrChanged" checked="@((Mnr == false))" />
        No
    </label>
</div>

<p>Select Requirement Status:</p>
<div>
    <label>
        <input type="radio" name="REQ" value="true" @onchange="OnReqChanged" checked="@((REQ == true))" />
        Met
    </label>
</div>
<div>
    <label>
        <input type="radio" name="REQ" value="false" @onchange="OnReqChanged" checked="@((REQ == false))" />
        Not Met
    </label>
</div>

@foreach (var param in Parameters)
{
    <p>Select @param.Key Status:</p>
    <div>
        <label>
            <input type="radio" name="@param.Key" value="true" @onchange="@(e => OnParamChanged(param.Key, true))" />
            Yes
        </label>
    </div>
    <div>
        <label>
            <input type="radio" name="@param.Key" value="false" @onchange="@(e => OnParamChanged(param.Key, false))" />
            No
        </label>
    </div>
}

<p>
    Select Priority Date Helaman Halls Timestamp:
    <input type="datetime-local" @bind="PDHL" class="form-control" />
</p>

<p>
    Select Priority Date Heritage Halls Timestamp:
    <input type="datetime-local" @bind="PDHR" class="form-control" />
</p>

<p>
    Select Priority Date CDRI Timestamp:
    <input type="datetime-local" @bind="CDRI" class="form-control" />
</p>

<p>
    Select Priority Date CDWP Timestamp:
    <input type="datetime-local" @bind="CDWP" class="form-control" />
</p>

<p>
    <button @onclick="NavigateToStepOne" class="btn btn-primary" disabled="@(eligibility == null || ageGroup == null || Mnr == null || REQ == null || Parameters.Any(kvp => kvp.Value == null))">
        Go To Select Area
    </button>
</p>

<p>
    Selected Eligibility: @(eligibility.HasValue ? (eligibility.Value ? "Yes" : "No") : "Not Selected")
</p>

<p>
    Selected Age Group: @(ageGroup.HasValue ? (ageGroup.Value ? "18-" : "19+") : "Not Selected")
</p>

<p>
    Selected Minor Status: @(Mnr.HasValue ? (Mnr.Value ? "Yes" : "No") : "Not Selected")
</p>

<p>
    Selected Requirement Status: @(REQ.HasValue ? (REQ.Value ? "Met" : "Not Met") : "Not Selected")
</p>

@foreach (var param in Parameters)
{
    <p>@param.Key: @(param.Value.HasValue ? (param.Value.Value ? "Yes" : "No") : "Not Selected")</p>
}

<p>
    Selected Priority Date Helaman Halls: @(PDHL.HasValue ? PDHL.Value.ToString("yyyy-MM-dd HH:mm:ss") : "Not Set")
</p>

<p>
    Selected Priority Date Heritage Halls: @(PDHR.HasValue ? PDHR.Value.ToString("yyyy-MM-dd HH:mm:ss") : "Not Set")
</p>

<p>
    Selected Priority Date CDRI: @(CDRI.HasValue ? CDRI.Value.ToString("yyyy-MM-dd HH:mm:ss") : "Not Set")
</p>

<p>
    Selected Priority Date CDWP: @(CDWP.HasValue ? CDWP.Value.ToString("yyyy-MM-dd HH:mm:ss") : "Not Set")
</p>

@code {
    private bool? eligibility = null;
    private bool? ageGroup = null;
    private bool? Mnr = null;
    private bool? REQ = null;

    private Dictionary<string, bool?> Parameters = new()
    {
        { "ADA", null },
        { "ATH", null },
        { "ESA", null },
        { "LISR", null },
        { "ISCH", null },
        { "FLEXGE", null },
        { "WL", null },
        { "PB", null },
        { "NOAML", null }
    };

    private DateTime? PDHL = null;
    private DateTime? PDHR = null;
    private DateTime? CDRI = null;
    private DateTime? CDWP = null;

    private void OnEligibilityChanged(ChangeEventArgs e)
    {
        eligibility = bool.TryParse(e.Value?.ToString(), out var result) ? result : null;
    }

    private void OnAgeGroupChanged(ChangeEventArgs e)
    {
        ageGroup = bool.TryParse(e.Value?.ToString(), out var result) ? result : null;
    }

    private void OnMnrChanged(ChangeEventArgs e)
    {
        Mnr = bool.TryParse(e.Value?.ToString(), out var result) ? result : null;
    }

    private void OnReqChanged(ChangeEventArgs e)
    {
        REQ = bool.TryParse(e.Value?.ToString(), out var result) ? result : null;
    }

    private void OnParamChanged(string param, bool value)
    {
        if (Parameters.ContainsKey(param))
            Parameters[param] = value;
    }

    private void NavigateToStepOne()
    {
        PDHL ??= DateTime.Now;
        PDHR ??= DateTime.Now;
        CDRI ??= DateTime.Now;
        CDWP ??= DateTime.Now;

        var queryParams = new List<string>
        {
            $"Ebt={(eligibility ?? false ? "true" : "false")}",
            $"AgeGroup={(ageGroup ?? false ? "true" : "false")}",
            $"Mnr={(Mnr ?? false ? "true" : "false")}",
            $"REQ={(REQ ?? false ? "true" : "false")}",
            $"PDHL={PDHL.Value:yyyy-MM-ddTHH:mm:ss}",
            $"PDHR={PDHR.Value:yyyy-MM-ddTHH:mm:ss}",
            $"CDRI={CDRI.Value:yyyy-MM-ddTHH:mm:ss}",
            $"CDWP={CDWP.Value:yyyy-MM-ddTHH:mm:ss}"
        };

        queryParams.AddRange(Parameters.Select(kvp => $"{kvp.Key}={(kvp.Value ?? false ? "true" : "false")}"));

        NavigationManager.NavigateTo($"/dynamicPortalStepOneSelectArea?{string.Join("&", queryParams)}");
    }
}
