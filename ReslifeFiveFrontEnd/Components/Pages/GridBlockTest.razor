@page "/gridBlockTest"
@inject IGenService GenService

<h3>This is the Block Test Grid</h3>

<div class="mb-3">
    <label for="startDate">Start Date:</label>
    <input id="startDate" type="date" @bind="StartDate" class="form-control" />

    <label for="endDate">End Date:</label>
    <input id="endDate" type="date" @bind="EndDate" class="form-control" />

    <button class="btn btn-primary mt-3" @onclick="GenerateColumns">Generate Grid</button>
</div>

@if (Columns != null && Columns.Any())
{
    <div style="overflow-x: auto; white-space: nowrap;">
        <table class="table table-bordered">
            <thead>
                <tr>
                    @foreach (var column in Columns)
                    {
                        <th>@column.ToString("MMM dd")</th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr>
                    @foreach (var column in Columns)
                    {
                        <td>Data for @column.ToString("MMM dd")</td>
                    }
                </tr>
            </tbody>
        </table>
    </div>
}


@code {
    public DateTime? StartDate { get; set; }
    public DateTime? EndDate { get; set; }
    public List<DateTime> Columns { get; set; }

    private void GenerateColumns()
    {
        if (StartDate.HasValue && EndDate.HasValue && StartDate <= EndDate)
        {
            // Generate a list of dates from StartDate to EndDate
            Columns = Enumerable.Range(0, (EndDate.Value - StartDate.Value).Days + 1)
                                .Select(offset => StartDate.Value.AddDays(offset))
                                .ToList();
        }
        else
        {
            Columns = new List<DateTime>();
        }
    }
}
