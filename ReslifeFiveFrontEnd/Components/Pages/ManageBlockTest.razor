@page "/manageBlockTest"
@inject IGenService GenService

<h3>ManageBlockTest</h3>
<p>This is the Test Version of the Block Manager.</p>


<Button @onclick="AddRow">Add New BlockTest</Button>

<div class="container-fluid vh-100">
    <Grid TItem="BlockTest"
          Data="AllObjects"
          Class="w-100 table table-hover table-bordered table-striped"
          AllowPaging="true"
          PageSize="10"
          Responsive="true">
        <GridColumn TItem="BlockTest" HeaderText="Id">
            @context.Id
        </GridColumn>
        <GridColumn TItem="BlockTest" HeaderText="Name">
            @context.Name
        </GridColumn>
        <GridColumn TItem="BlockTest" HeaderText="Start Date">
            @(context.StartDate.ToString() ?? "Not Set")
        </GridColumn>

       @*  End Date Time Stamp *@
        <GridColumn TItem="BlockTest" HeaderText="End Date">
            @(context.EndDate.ToString() ?? "Not Set")
        </GridColumn>
        @*  End Date Time Stamp *@

        @* RoomNumber *@
        <GridColumn TItem="BlockTest" HeaderText="Room Number">
            @context.RoomNumber
        </GridColumn>
        @* RoomNumber *@
        
        @* Dropdown *@
        <GridColumn TItem="BlockTest" HeaderText="OccupantType">
            @GetOccupantType(context.OccupantType)
        </GridColumn>
        @* Dropdown *@

        @* Dropdown *@
        <GridColumn TItem="BlockTest" HeaderText="Area">
            @GetArea(context.Area)
        </GridColumn>
        @* Dropdown *@

        @* Dropdown *@
        <GridColumn TItem="BlockTest" HeaderText="Building">
            @GetBuilding(context.Building)
        </GridColumn>
        @* Dropdown *@

        @* Floor *@
        <GridColumn TItem="BlockTest" HeaderText="Floor">
            @context.Floor
        </GridColumn>
        @* Floor *@

        @* Wing *@
        <GridColumn TItem="BlockTest" HeaderText="Wing">
            @context.Wing
        </GridColumn>
        @* Wing *@

        @* StairWell *@
        <GridColumn TItem="BlockTest" HeaderText="StairWell">
            @context.StairWell
        </GridColumn>
        @* StaiWell *@

        @* ApartmentUnit *@
        <GridColumn TItem="BlockTest" HeaderText="ApartmentUnit">
            @context.ApartmentUnit
        </GridColumn>
        @* ApartmentUnit *@

        @* Dropdown *@
        <GridColumn TItem="BlockTest" HeaderText="Sex">
            @GetSex(context.Sex)
        </GridColumn>
        @* Dropdown *@
        @* Dropdown *@
        <GridColumn TItem="BlockTest" HeaderText="Community">
            @GetCommunity(context.Community)
        </GridColumn>
        @* Dropdown *@
        @* BedspaceCode *@
        <GridColumn TItem="BlockTest" HeaderText="BedspaceCode">
            @context.BedspaceCode
        </GridColumn>
        @* BedspaceCode *@

        @*Checkbox Bool*@
        <GridColumn TItem="BlockTest" HeaderText="Active">
            @GetActiveText(context.Active)
        </GridColumn>


        @*Checkbox Bool*@

        <GridColumn TItem="BlockTest" HeaderText="Action">
            <Button @onclick="() => EditObject(context)">
                <Icon Name="IconName.Pencil" />
            </Button>
            <Button @onclick="() => DeleteObject(context)">
                <Icon Name="IconName.Trash3" />
            </Button>
        </GridColumn>
    </Grid>
</div>

<Modal @ref="ObjectAdditionModal" Title="Add/Edit BlockTest">
    <BodyTemplate>
        <div>
            @if (SelectedObject.Id != 0)
            {
                <p>
                    BlockTest ID: @SelectedObject.Id
                </p>
            }


            <table>
                <tr>
                    <td><label for="nameInput">Name:</label></td>
                    <td><input type="text" @bind="SelectedObject.Name" /></td>
                </tr>
                <tr>
                    <td><br /></td>
                    <td><br /></td>
                </tr>
                <tr>
                    <td colspan="2" align="center"><b>Location Properties</b></td>
                </tr>
                <tr>
                    <td><label for="areaSelect" class="mt-3">Area:</label></td>
                    <td>
                        <select class="form-control mt-3" @bind="SelectedObject.Area">
                            @* <option value="0">None</option> *@
                            <option value="1">HELA</option>
                            <option value="2">HERI</option>
                            <option value="3">RIV</option>
                            <option value="4">WYVIEW</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td><label for="buildingSelect" class="mt-3">Building:</label></td>
                    <td>
                        <select class="form-control mt-3" @bind="SelectedObject.Building">
                            @* <option value="0">None</option> *@
                            <option value="1">Hinckley</option>
                            <option value="2">Chipman</option>
                            <option value="3">DavidJohn</option>
                            <option value="4">Taylor</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td><label for="floorInput" class="my-3">Floor :</label></td>
                    <td><InputNumber @bind-Value="SelectedObject.Floor" class="form-control mt-3" placeholder="Floor" /></td>
                </tr>
                <tr>
                    <td><label for="wingInput" class="my-3">Wing :</label></td>
                    <td><InputNumber @bind-Value="SelectedObject.Wing" class="form-control mt-3" placeholder="Wing" /></td>
                </tr>
                <tr>
                    <td><label for="stairWellInput" class="my-3">StairWell :</label></td>
                    <td><InputNumber @bind-Value="SelectedObject.StairWell" class="form-control mt-3" placeholder="StairWell" /></td>
                </tr>
                <tr>
                    <td><label for="roomNumberInput" class="my-3">Room Number:</label></td>
                    <td><InputNumber @bind-Value="SelectedObject.RoomNumber" class="form-control mt-3" placeholder="Room Number" /></td>
                </tr>
                <tr>
                    <td><label for="appartmentUnitInput" class="my-3">AppartmentUnit :</label></td>
                    <td><InputNumber @bind-Value="SelectedObject.ApartmentUnit" class="form-control mt-3" placeholder="AppartmentUnit" /></td>
                </tr>
                <tr>
                    <td><br /></td>
                    <td><br /></td>
                </tr>
                <tr>
                    <td colspan="2" align="center"><b>Bedspace Setup</b></td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                </tr>
            </table>

           @*  Occupant Type *@
           <label for="occupantTypeSelect" class="mt-3">Occupant Type:</label>
           <select class="form-control mt-3" @bind="SelectedObject.OccupantType">
                @* <option value="0">None</option> *@
                <option value="1">Single</option>
                <option value="2">Family</option>
                <option value="3">Conference</option>
                <option value="4">Closed For Maintenance</option>
           </select>
           @*  Occupant Type *@



            @*  Sex *@
            <label for="sexSelect" class="mt-3">Sex:</label>
            <select class="form-control mt-3" @bind="SelectedObject.Sex">
                @* <option value="0">None</option> *@
                <option value="1">M</option>
                <option value="2">F</option>
                <option value="3">NA</option>

            </select>
            @*  Sex *@
            @*  Community *@
            <label for="communitySelect" class="mt-3">Community:</label>
            <select class="form-control mt-3" @bind="SelectedObject.Community">
                @* <option value="0">None</option> *@
                <option value="1">18-</option>
                <option value="2">19+</option>
                <option value="3">Either</option>

            </select>
            @*  Community *@

            @* BedspaceCode Input *@
            <label for="bedspaceCodeInput" class="my-3">Bedspace Code:</label>
            <InputNumber @bind-Value="SelectedObject.BedspaceCode" class="form-control mt-3" placeholder="Bedspace Code" />
            @* BedspaceCode Input *@

            @*Boolean Checkbox*@
            <label class="mt-3">Active</label>
            <div class="form-check mt-3">
                <InputCheckbox @bind-Value="isActive" class="form-check-input" />

            </div>
            @*Boolean Checkbox*@



            <label for="startDateInput" class="mt-3">Start Date:</label>
            <DateInput TValue="DateOnly" @bind-Value="StartDate" />
            <TimeInput TValue="TimeOnly" @bind-Value="StartTime" />
            <br />
            <label for="endDateInput" class="mt-3">End Date:</label>
            <DateInput TValue="DateOnly" @bind-Value="EndDate" />
            <TimeInput TValue="TimeOnly" @bind-Value="EndTime" />

        </div>
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
        <Button Color="ButtonColor.Primary" @onclick="UpsertObject">Save changes</Button>
    </FooterTemplate>
</Modal>

@code {
    private List<BlockTest> AllObjects = [];
    private Modal ObjectAdditionModal = default!;
    private BlockTest SelectedObject = new BlockTest();

    // Start Date
    private DateOnly StartDate = DateOnly.FromDateTime(DateTime.Now);
    private TimeOnly StartTime = TimeOnly.FromDateTime(DateTime.Now);
    private DateOnly EndDate = DateOnly.FromDateTime(DateTime.Now);
    private TimeOnly EndTime = TimeOnly.FromDateTime(DateTime.Now);


    protected override void OnInitialized()
    {
        AllObjects = GenService.GetModel<BlockTest>().ToList();
    }

    private void UpdateObjects()
    {
        AllObjects = GenService.GetModel<BlockTest>().ToList();
    }

    private async Task AddRow()
    {
        SelectedObject = new BlockTest
        {
            OccupantType = 0,
            Area = 0,
            Building = 1,
            Sex = 0,
            Active = false
        };
        await OnShowModalClick();
    }

    private async Task OnShowModalClick()
    {
        await ObjectAdditionModal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await ObjectAdditionModal.HideAsync();
    }

    private async Task UpsertObject()
    {
        //SelectedObject.Start = selectedDateTime;
        SelectedObject.StartDate = DateTime.SpecifyKind(StartDate.ToDateTime(StartTime), DateTimeKind.Utc);
        SelectedObject.EndDate = DateTime.SpecifyKind(EndDate.ToDateTime(EndTime), DateTimeKind.Utc);
        GenService.Upsert<BlockTest>(SelectedObject);
        await OnHideModalClick();
        UpdateObjects();
    }

    private async Task EditObject(BlockTest varObject)
    {
        SelectedObject = varObject;
        await OnShowModalClick();
    }

    private void DeleteObject(BlockTest varObject)
    {
        GenService.Remove<BlockTest>(varObject);
        GenService.SaveChanges();
        UpdateObjects();
    }

    private string GetOccupantType(int? occupantType)
    {
        return occupantType switch
        {
            // 0 => "None",
            1 => "Single",
            2 => "Family",
            3 => "Conference",
            4 => "Closed For Maintenance",
            _=> "Unknown"
        };
    }

    private string GetArea(int? area)
    {
        return area switch
        {
            // 0 => "None",
            1 => "HELA",
            2 => "HERI",
            3 => "RIV",
            4 => "WYVIEW",
            _ => "Unknown"
        };
    }

    private string GetSex(int? sex)
    {
        return sex switch
        {
            1 => "M",
            2 => "F",
            3 => "NA",
            _=> "NA"
        };
    }

    private string GetCommunity(int? community)
    {
        return community switch
        {
            1 => "18-",
            2 => "19+",
            3 => "Either",
            _ => "NA"
        };
    }

    private string GetBuilding(int? building)
    {
        return building switch
        {
            1 => "Hinckley",
            2 => "Chipman",
            3 => "David John",
            4 => "Taylor",
            _ => "NA"
        };
    }

    private bool isActive
    {
        get => SelectedObject.Active ?? false;
        set => SelectedObject.Active = value;
    }

    private string GetActiveText(bool? active)
    {
        return active switch
        {
            true => "Yes",
            false => "No",
            null => "Unknown"
        };
    }
}























}