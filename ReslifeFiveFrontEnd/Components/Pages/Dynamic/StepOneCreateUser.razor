@page "/createTestUser"
@inject IGenService GenService
@inject NavigationManager NavigationManager

<h3>Create Test User</h3>

<form>
    <div>
        <label>Enter Name:</label>
        <input type="text" @bind="Name" class="form-control" placeholder="Enter your name" />
    </div>

    <div>
        <label>Enter NetID:</label>
        <input type="text" @bind="NetID" class="form-control" placeholder="Enter your NetID" />
    </div>

    <div>
        <label>Select Agreement Period:</label>
        <select @onchange="OnAgreementPeriodChanged" class="form-control">
            <option value="">-- Select --</option>
            <option value="3">Fall Winter 2025</option>
            <option value="4">Winter 2025</option>
            <option value="5">Spring 2025</option>
            <option value="6">Summer 2025</option>
            <option value="7">Fall Winter 2025</option>
        </select>
    </div>

    <div>
        <label>Application Eligible:</label>
        <div>
            <input type="radio" name="ApplicationEligible" value="true" @onchange="e => OnApplicationEligibleChanged(true)" checked="@(ApplicationEligible == true)" />
            <label>Yes</label>
        </div>
        <div>
            <input type="radio" name="ApplicationEligible" value="false" @onchange="e => OnApplicationEligibleChanged(false)" checked="@(ApplicationEligible == false)" />
            <label>No</label>
        </div>
    </div>

    <div>
        <label>Contract Eligible:</label>
        <div>
            <input type="radio" name="ContractEligible" value="true" @onchange="e => OnContractEligibleChanged(true)" checked="@(ContractEligible == true)" />
            <label>Yes</label>
        </div>
        <div>
            <input type="radio" name="ContractEligible" value="false" @onchange="e => OnContractEligibleChanged(false)" checked="@(ContractEligible == false)" />
            <label>No</label>
        </div>
    </div>

    <div>
        <label>Sex At Birth:</label>
        <div>
            <input type="radio" name="SexAtBirth" value="true" @onchange="e => OnSexAtBirthChanged(true)" checked="@(SexAtBirth == true)" />
            <label>Female</label>
        </div>
        <div>
            <input type="radio" name="SexAtBirth" value="false" @onchange="e => OnSexAtBirthChanged(false)" checked="@(SexAtBirth == false)" />
            <label>Male</label>
        </div>
    </div>

    <div>
        <label>Helaman Priority Date:</label>
        <input type="datetime-local" @bind="HelamanPriorityDate" class="form-control" />
    </div>

    <div>
        <label>Heritage Priority Date:</label>
        <input type="datetime-local" @bind="HeritagePriorityDate" class="form-control" />
    </div>

    <div>
        <label>Wyview Park Priority Date:</label>
        <input type="datetime-local" @bind="WyviewParkPriorityDate" class="form-control" />
    </div>

    <div>
        <label>Riviera Priority Date:</label>
        <input type="datetime-local" @bind="RivieraPriorityDate" class="form-control" />
    </div>

    <button type="button" @onclick="NavigateToSelectAgreementPeriod" class="btn btn-primary"
            disabled="@(string.IsNullOrWhiteSpace(Name) || string.IsNullOrWhiteSpace(NetID) || AgreementPeriod == null || ApplicationEligible == null || ContractEligible == null || SexAtBirth == null || HelamanPriorityDate == null || HeritagePriorityDate == null || WyviewParkPriorityDate == null || RivieraPriorityDate == null)">
        Submit
    </button>
</form>

@code {
    private string Name { get; set; } = string.Empty; // Name input
    private string NetID { get; set; } = string.Empty; // NetID input
    private int? AgreementPeriod { get; set; } = null; // Agreement Period input
    private bool? ApplicationEligible { get; set; } = null; // Application Eligible input
    private bool? ContractEligible { get; set; } = null; // Contract Eligible input
    private bool? SexAtBirth { get; set; } = null; // Sex At Birth input
    private DateTime? HelamanPriorityDate { get; set; } = null; // Helaman Priority Date input
    private DateTime? HeritagePriorityDate { get; set; } = null; // Heritage Priority Date input
    private DateTime? WyviewParkPriorityDate { get; set; } = null; // Wyview Park Priority Date input
    private DateTime? RivieraPriorityDate { get; set; } = null; // Riviera Priority Date input

    private void OnAgreementPeriodChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out var value))
        {
            AgreementPeriod = value;
        }
    }

    private void OnApplicationEligibleChanged(bool value) => ApplicationEligible = value;
    private void OnContractEligibleChanged(bool value) => ContractEligible = value;
    private void OnSexAtBirthChanged(bool value) => SexAtBirth = value;

    private void NavigateToSelectAgreementPeriod()
    {
        // Construct the query string and navigate
        var queryParams = new List<string>
        {
            $"Name={Uri.EscapeDataString(Name)}",
            $"NetID={Uri.EscapeDataString(NetID)}",
            $"AgreementPeriod={AgreementPeriod}",
            $"ApplicationEligible={(ApplicationEligible?.ToString().ToLower() ?? "false")}",
            $"ContractEligible={(ContractEligible?.ToString().ToLower() ?? "false")}",
            $"SexAtBirth={(SexAtBirth?.ToString().ToLower() ?? "false")}",
            $"HelamanPriorityDate={HelamanPriorityDate?.ToString("yyyy-MM-ddTHH:mm:ss")}",
            $"HeritagePriorityDate={HeritagePriorityDate?.ToString("yyyy-MM-ddTHH:mm:ss")}",
            $"WyviewParkPriorityDate={WyviewParkPriorityDate?.ToString("yyyy-MM-ddTHH:mm:ss")}",
            $"RivieraPriorityDate={RivieraPriorityDate?.ToString("yyyy-MM-ddTHH:mm:ss")}"
        };

        NavigationManager.NavigateTo($"/selectAgreementPeriod?{string.Join("&", queryParams)}");
    }
}
