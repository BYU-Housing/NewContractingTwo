@page "/stepFiveSelectFloor"
@inject NavigationManager NavigationManager

<h1 style="text-align: center;">Contracting Portal</h1>
<!-- Progress Bar -->
<div class="progress mb-4">
    <div class="progress-bar"
         role="progressbar"
         style="width: 50%; background-color: #007bff;"
         aria-valuenow="5"
         aria-valuemin="0"
         aria-valuemax="10">
        Step 5 of 10
    </div>
</div>
<h5>Step 5 - Select your desired Floor</h5>
<p>
    Please select the floor that you would like to live in.
</p>


<!-- Display Blocks Based on Area -->
<div class="container">
    @foreach (var block in AvailableBlocks)
    {
        <div class="card mb-3">
            <div class="card-body d-flex justify-content-between align-items-center">
                <div>
                    <span class="card-title">Floor @block</span>
                </div>
                <button class="btn btn-primary" @onclick="() => NavigateToStepSix(block)">Select</button>
            </div>
        </div>
    }
</div>

<!-- Display URL Parameters as a String -->
<div class="mt-4">
    <h4>URL Parameters</h4>
    <p>@UrlParametersString</p>
</div>

@code {
    private string UrlParametersString = string.Empty;
    private List<string> AvailableBlocks = new();
    private int? Area;

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);

        // Use "&" as the parameter delimiter
        UrlParametersString = string.Join("&", query.AllKeys.Select(key => $"{key}={query[key]}"));

        // Parse the Area parameter
        if (query["Area"] != null && int.TryParse(query["Area"], out var area))
        {
            Area = area;
            SetAvailableBlocks();
        }
    }

    private void SetAvailableBlocks()
    {
        AvailableBlocks = Area switch
        {
            1 => new List<string> { "1100", "1200", "2100", "2000", "2200", "3100", "3200" },
            2 => new List<string> { "1", "2", "3", "4" },
            3 => new List<string> { "1", "2", "3" },
            4 => new List<string> { "1", "2", "3" },
            _ => new List<string> { "No blocks available for this area" }
        };
    }

    private void NavigateToStepSix(string block)
    {
        // Construct query string with the selected floor
        var queryParams = $"{UrlParametersString}&Floor={block}";
        NavigationManager.NavigateTo($"/stepSixSelectBedspace?{queryParams}");
    }
}
