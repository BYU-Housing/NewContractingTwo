@page "/metricContracting"
@inject IGenService GenService

<h3>Contracting Metrics</h3>
<p>This is the Test Version of the Block Manager.</p>
<p>Is this showing?</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col" colspan="2" class="text-center">Summer 2025</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>Single</td>
            <td>Row 1, Column 2</td>
        </tr>
        <tr>
            <td>Employee</td>
            <td>Row 2, Column 2</td>
        </tr>
        <tr>
            <td>Row 3, Column 1</td>
            <td>Row 3, Column 2</td>
        </tr>
        <tr>
            <td>Row 4, Column 1</td>
            <td>Row 4, Column 2</td>
        </tr>
        <tr>
            <td>Row 5, Column 1</td>
            <td>Row 5, Column 2</td>
        </tr>
    </tbody>
</table>


<div class="container-fluid vh-100">
    <h4>Total Count of BlockTest Rows (AgreementPeriod = 3): @BlockTestCount</h4>
</div>

@code {
    private int BlockTestCount;

    protected override async Task OnInitializedAsync()
    {
        await LoadBlockTestCount();
    }

    private async Task LoadBlockTestCount()
    {
        // Assuming GenService.GetModel<T>() returns an IQueryable<T>
        BlockTestCount = await Task.Run(() =>
            GenService.GetModel<BlockTest>().Count(bt => bt.AgreementPeriod == 3));
    }
}
