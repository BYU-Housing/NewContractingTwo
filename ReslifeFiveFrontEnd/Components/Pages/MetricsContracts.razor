@page "/metricContracting"
@inject IGenService GenService

<h3>Contracting Metrics</h3>
<h1>Spring 2025</h1>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Category</th>
            <th scope="col">Active</th>
            <th scope="col">Total</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th scope="row">Total Active Agreements</th>
            <td>@ActiveBlockTestCount</td>
            <td>@BlockTestCount</td>
        </tr>
    </tbody>
</table>

<div class="container-fluid vh-100">
    <h4>Total Count of BlockTest Rows (AgreementPeriod = 3): @BlockTestCount</h4>
    <h4>Total Count of Active BlockTest Rows (AgreementPeriod = 3 and Active = true): @ActiveBlockTestCount</h4>
</div>

@code {
    private int BlockTestCount;
    private int ActiveBlockTestCount;

    protected override async Task OnInitializedAsync()
    {
        await LoadMetrics();
    }

    private async Task LoadMetrics()
    {
        // Count rows where AgreementPeriod = 3
        BlockTestCount = await GenService.CountAsync<BlockTest>(bt => bt.AgreementPeriod == 3);

        // Count rows where AgreementPeriod = 3 and Active = true
        ActiveBlockTestCount = await GenService.CountAsync<BlockTest>(bt => bt.AgreementPeriod == 3 && bt.Active == true);
    }
}
