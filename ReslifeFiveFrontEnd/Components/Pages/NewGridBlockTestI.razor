@page "/gridBlockTestI"
@inject IGenService GenService

<h3>NewGridBlockTestI</h3>

<div>
    <button class="btn btn-primary" @onclick="FetchBlockTestData">Load BlockTest Data</button>
</div>

@if (BlockTestList != null && BlockTestList.Any())
{
    <div class="mt-3">
        @foreach (var block in BlockTestList)
        {
            <div class="block-item" style="width:@CalculateBlockWidth(block.StartDate, block.EndDate)">
                @block.Name |
                @(block.StartDate.HasValue ? block.StartDate.Value.ToString("yyyy-MM-dd HH:mm") : "No Start Date") |
                @(block.EndDate.HasValue ? block.EndDate.Value.ToString("yyyy-MM-dd HH:mm") : "No End Date")
            </div>
        }
    </div>
}
else if (BlockTestList != null)
{
    <div class="alert alert-warning mt-3">
        No data found in the BlockTest table.
    </div>
}

<style>
    .block-item {
        border: 1px solid black;
        padding: 10px;
        margin: 5px;
        display: inline-block;
        text-align: center;
    }
</style>

@code {
    private List<BlockTest> BlockTestList { get; set; } = new List<BlockTest>();

    private void FetchBlockTestData()
    {
        // Fetch all rows from the BlockTest table
        BlockTestList = GenService.GetModel<BlockTest>()
                                   .AsQueryable()
                                   .ToList();
    }

    private string CalculateBlockWidth(DateTime? startDate, DateTime? endDate)
    {
        if (startDate.HasValue && endDate.HasValue)
        {
            var duration = (endDate.Value - startDate.Value).TotalHours;
            return $"{Math.Max(1, duration)}px"; // Minimum width of 1px
        }
        return "1px"; // Default width if dates are null
    }
}
