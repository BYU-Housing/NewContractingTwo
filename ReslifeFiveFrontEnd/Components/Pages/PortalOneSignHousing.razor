@page "/portalOneSignHousing"
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.WebUtilities

<h3>Sign Housing Agreement</h3>

<div class="progress mb-3">
    <div class="progress-bar"
         role="progressbar"
         style="width: 70%;"
         aria-valuenow="70"
         aria-valuemin="0"
         aria-valuemax="100">
        Step 7 of 10
    </div>
</div>

<h4>URL Parameters:</h4>
<ul>
    @if (UrlParameters.Any())

    {
        @foreach (var param in UrlParameters)

        {
            <li><strong>@param.Key:</strong> @param.Value</li>
        }
    }

    else

    {
        <li>No parameters were provided.</li>
    }
</ul>

<div class="iframe-container">
    <iframe src="@IframeUrl"
            width="100%"
            height="100%"
            frameborder="0"
            style="border: 0; overflow: hidden; min-height: 500px; min-width: 600px;">
    </iframe>
</div>

<style>
    .iframe-container {
        width: 100%;
        min-height: 500px;
        border: none;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #f8f9fa; /* Optional background color */
    }

    iframe {
        flex-grow: 1;
    }
</style>

@code {
    [Parameter]

    [SupplyParameterFromQuery]

    public int? Area { get; set; }



    [Parameter]

    [SupplyParameterFromQuery]

    public int? BuildingId { get; set; }



    [Parameter]

    [SupplyParameterFromQuery]

    public string? Wing { get; set; }



    [Parameter]

    [SupplyParameterFromQuery]

    public int? BedspaceId { get; set; }



    [Parameter]

    [SupplyParameterFromQuery]

    public string? MealPlan { get; set; }



    private string IframeUrl => GenerateIframeUrl();

    private Dictionary<string, string?> UrlParameters = new();



    protected override void OnInitialized()

    {

        // Parse the query parameters from the current URL

        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        UrlParameters = QueryHelpers.ParseQuery(uri.Query)

                                     .ToDictionary(k => k.Key, v => v.Value.FirstOrDefault());

    }



    private string GenerateIframeUrl()

    {

        // Base Adobe Sign URL

        string baseUrl = "https://byusign.na2.adobesign.com/public/esignWidget?wid=CBFCIBAA3AAABLblqZhCRGXCoNOZTWZqIBFqheJBgO9aSC88qeixZ2W5qPPYHatMzvNZ5hghHC8yispuAwQo*&hosted=false";



        // Add query parameters

        var queryParams = new Dictionary<string, string?>
        {
            { "Area", Area?.ToString() },
            { "BuildingId", BuildingId?.ToString() },
            { "Wing", Wing },
            { "BedspaceId", BedspaceId?.ToString() },
            { "MealPlan", MealPlan }
        };



        return QueryHelpers.AddQueryString(baseUrl, queryParams);

    }
}